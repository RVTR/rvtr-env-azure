additionalArguments:
  - --certificatesresolvers.cloudflare.acme.dnschallenge=true
  - --certificatesResolvers.cloudflare.acme.dnsChallenge.delayBeforeCheck=30
  - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
  - --certificatesresolvers.cloudflare.acme.email=howdy.rvtr@outlook.com
  - --certificatesresolvers.cloudflare.acme.storage=/data/acme.json
  - --metrics=true
  - --metrics.prometheus=true
  - --metrics.prometheus.entryPoint=traefik
  - --tracing=true
  - --tracing.zipkin=true
  - --tracing.zipkin.httpEndpoint=http://zipkin:9411/api/v2/spans
  - --tracing.zipkin.sameSpan=true

affinity: {}

autoscaling:
  enabled: false

deployment:
  additionalContainers: []
  annotations: {}
  enabled: true
  initContainers: []
  podAnnotations: {}
  replicas: 1

env: []

envFrom:
  - secretRef:
      name: rvtr-cloudflare

globalArguments:
  - --global.checknewversion
  - --global.sendanonymoususage

hostNetwork: false

image:
  name: traefik
  pullPolicy: IfNotPresent
  tag: 2.2.11

ingressRoute:
  dashboard:
    annotations: {}
    enabled: false
    labels: {}

logs:
  general:
    level: ERROR
  access:
    enabled: false
    filters: {}
    fields:
      general:
        defaultmode: keep
        names: {}
      headers:
        defaultmode: drop
        names: {}

nodeSelector: {}

persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 128Mi
  path: /data
  annotations: {}

podDisruptionBudget:
  enabled: false

podSecurityContext:
  fsGroup: 65532

ports:
  analytics:
    expose: true
    exposedPort: 3000
    port: 3000
    protocol: TCP
  http:
    expose: true
    exposedPort: 80
    port: 8000
    protocol: TCP
  https:
    expose: true
    exposedPort: 443
    port: 8443
    protocol: TCP
  metrics:
    expose: true
    exposedPort: 9090
    port: 9090
    protocol: TCP
  tracing:
    expose: true
    exposedPort: 9411
    port: 9411
    protocol: TCP
  traefik:
    expose: true
    exposedPort: 9000
    port: 9000
    protocol: TCP
  web: null
  websecure: null

priorityClassName: ''

providers:
  kubernetesCRD:
    enabled: true
  kubernetesIngress:
    enabled: false
    publishedService:
      enabled: false

rbac:
  enabled: true
  namespaced: false

resources: {}

rollingUpdate:
  maxUnavailable: 1
  maxSurge: 1

securityContext:
  capabilities:
    drop: [ALL]
  readOnlyRootFilesystem: true
  runAsGroup: 65532
  runAsNonRoot: true
  runAsUser: 65532

service:
  enabled: true
  type: LoadBalancer
  annotations: {}
  spec:
    loadBalancerIP: ''
  loadBalancerSourceRanges: []
  externalIPs: []

serviceAccount:
  name: ''

serviceAccountAnnotations: {}

tolerations: []

volumes: []
